(function(e){function n(n){for(var i,o,r=n[0],l=n[1],c=n[2],u=0,d=[];u<r.length;u++)o=r[u],Object.prototype.hasOwnProperty.call(s,o)&&s[o]&&d.push(s[o][0]),s[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);m&&m(n);while(d.length)d.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],i=!0,r=1;r<t.length;r++){var l=t[r];0!==s[l]&&(i=!1)}i&&(a.splice(n--,1),e=o(o.s=t[0]))}return e}var i={},s={netflix:0},a=[];function o(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=e,o.c=i,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)o.d(t,i,function(n){return e[n]}.bind(null,i));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="//mikatalk.github.io/tv-networks-prerolls/";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],l=r.push.bind(r);r.push=n,r=r.slice();for(var c=0;c<r.length;c++)n(r[c]);var m=l;a.push([1,"chunk-vendors"]),t()})({1:function(e,n,t){e.exports=t("6b08")},"6b08":function(e,n,t){"use strict";t.r(n);var i=t("d4ec"),s=t("bee2"),a=t("ade3"),o=(t("e260"),t("e6cf"),t("cca6"),t("a79d"),t("db29"),t("5a89")),r="\nvoid main() {\n    gl_Position = vec4( position, 1.0 );\n}",l="\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat random (vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nmat2 rotate2d(float _angle){\n  return mat2(cos(_angle),-sin(_angle), sin(_angle),cos(_angle));\n}\n\nmat2 scale2D(vec2 _scale){\n  return mat2(_scale.x,0.0,\n              0.0,_scale.y);\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n  _size = vec2(0.5) - _size*0.5;\n  vec2 uv = smoothstep(_size, _size+vec2(0.001), _st);\n  uv *= smoothstep(_size, _size+vec2(0.001), vec2(1.0)-_st);\n  return uv.x*uv.y;\n}\n\nfloat cross(in vec2 _st, float _size){\n  return  box(_st, vec2(_size,_size/4.)) + box(_st, vec2(_size/4.,_size));\n}\n\nfloat circle(in vec2 _st, in float _radius){\n  vec2 dist = _st-vec2(0.5);\n  return 1.-smoothstep(_radius-(_radius*0.01), \n    _radius+(_radius*0.01),\n    dot(dist,dist)*4.0);\n}\n\nfloat mapTime (float from, float to, float time) {\n  return clamp((time - from) / (to - from), 0.0, 1.0);\n}\n\nvec3 makeBackground (vec2 st, float angle, float progress) {\n  \n  st -= vec2(0.5, 0.5);\n  st = rotate2d(angle) * st;\n  st += vec2(0.5, 0.5);\n  st.x *= 100.0;\n  // vec2 ipos = floor(st);  // get the integer coords\n  vec2 ipos = fract(st);  // get the fractional coords\n  st.x += sin(st.x) * sin(25.0 + progress * 150.0) * 4.0;\n  ipos = floor(st);\n  if (random(ipos) < 0.2) {\n    return vec3(0);\n  }\n  return vec3(\n    mod(random(ipos+ 1.0)*4.0, 1.0) * 0.5, \n    mod(random(ipos+ 1.0)*8.0, 1.0) * 0.25, \n    mod(random(ipos+ 1.0)*16.0, 1.0) * 0.75\n    // random(ipos+1.0) * 0.5\n  );\n}\n\nfloat makeNLeft (vec2 st, float scale) {\n  st.x += 0.05;\n  return box(st, vec2(0.08, 0.75));\n}\n\nfloat makeNRight (vec2 st, float scale) {\n  st.x -= 0.13;\n  return box(st, vec2(0.08, 0.75));\n}\n\nfloat makeNMid (vec2 st, float scale) {\n  st -= vec2(0.54, 0.5);\n  st = rotate2d(0.42) * st;\n  st += vec2(0.5, 0.5);\n  return box(st, vec2(0.08, 0.75));\n}\n\nfloat makeNShadow (vec2 st, float scale) {\n  return 1.0 - clamp(distance(st, vec2(0.5)) * 4.0 / scale, 0.0, 1.0);\n}\n\nvec3 hsl2rgb(float h, float s, float l){\n  vec3 rgb = clamp(abs(mod(h * 6.0 + vec3(0.0,4.0,2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n  return l + s * (rgb - 0.5) * (1.0 - abs(2.0 * l - 1.0));\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy / u_resolution.xy;\n  \n    // control the global scale and camera translation\n    float scale = 1.0 - mapTime(6.0, 10.0, u_time) / 1.0;\n    st -= vec2(0.5);\n    st = scale2D( vec2(scale) ) * st;\n    st += vec2(0.5);\n    // slight translation to the right to focus on the left N side\n    st.x -= mapTime(6.0, 10.0, u_time) * 0.07;\n\n    \n    vec3 color = vec3(0.0);\n    vec3 bg;\n\n    float masks = circle(st + vec2(-0.02, -0.92), 2.2);\n    masks += circle(st + vec2(-0.02, 0.92), 2.2);\n   \n\n    // N - left line\n    vec3 nLeft = vec3(0.0, 0.0, 0.0);\n    nLeft = mix(\n      nLeft,\n      vec3(0.47, 0.047, 0.0),\n      step(0.5, mapTime(0.0, 1.5, u_time - st.y / 2.0))\n    );\n    nLeft = mix(\n      nLeft,\n      makeBackground(st, 0.0, 0.25), \n      mapTime(4.5, 6.5, u_time + st.y / 2.0)\n    );\n    \n    nLeft = mix(\n      nLeft,\n      makeBackground(st, 0.0, mapTime(0.0, 30.0, u_time)), \n      mapTime(7.0, 20.0, u_time)\n    );\n    nLeft = mix(\n      nLeft,\n      vec3(0.0, 0.0, 0.0), \n      mapTime(6.0, 12.0, u_time + st.y / 2.0)\n    );\n    float phi = 1.16;\n    float base = 256.0;\n    nLeft = mix(\n      nLeft,\n      hsl2rgb(st.x - st.x * u_time, 1.0, cos(st.x * base) / 2.0 + sin(st.x * base / phi * u_time / 64.0) / 2.0),\n      mapTime(7.0, 11.0, u_time + st.y / 2.0)\n    );\n    \n    // N - middle line\n    vec3 nMid = vec3(0.0, 0.0, 0.0);\n    nMid = mix(\n      nMid,\n      vec3(0.87, 0.12, 0.0),\n      step(0.5, mapTime(0.5, 2.5, u_time + st.y / 2.0))\n    );\n    nMid = mix(\n      nMid,\n      makeBackground(st, 0.42, 0.5), \n      mapTime(4.25, 6.25, u_time - st.y / 2.0)\n    );\n    nMid = mix(\n      nMid,\n      vec3(0.0, 0.0, 0.0), \n      mapTime(5.75, 6.25, u_time - st.y / 2.0)\n    );\n\n    // N - right line\n    vec3 nRight = vec3(0.0, 0.0, 0.0);\n    nRight = mix(\n      nRight,\n      vec3(0.47, 0.047, 0.0),\n      step(0.5, mapTime(0.5, 2.0, u_time - st.y / 2.0))\n    );\n    nRight = mix(\n      nRight,\n      makeBackground(st, 0.0, 0.5), \n      mapTime(4.0, 6.0, u_time + st.y / 2.0)\n    );\n    nRight = mix(\n      nRight,\n      vec3(0.0, 0.0, 0.0), \n      mapTime(5.5, 6.0, u_time + st.y / 2.0)\n    );\n   \n    // merge and mask main elements\n    color = mix(color, nLeft, mix(makeNLeft(st, 1.0), 0.0, masks));\n    color = mix(color, nRight, mix(makeNRight(st, 1.0), 0.0, masks));\n    color = mix(color, vec3(0), 0.5 * makeNShadow(st + vec2(-0.02, 0.0), 0.75));\n    color = max(color, mix(vec3(0), nMid, mix(makeNMid(st, 1.0), 0.0, masks)));\n\n    // add band top and bottom (not a nutflex thing but i thought it looked cool)\n    if (st.y < 0.1 || st.y > 0.9) {\n      bg = makeBackground(st, 0.0, mapTime(0.0, 10.0, u_time));\n      color = mix(vec3(0.47, 0.047, 0.0), bg, mapTime(0.0, 10.0, u_time));\n    }\n    gl_FragColor = vec4(color,1.0);\n}\n\n",c=function(){function e(n){var t=this;Object(i["a"])(this,e),Object(a["a"])(this,"container",void 0),Object(a["a"])(this,"camera",void 0),Object(a["a"])(this,"scene",void 0),Object(a["a"])(this,"renderer",void 0),Object(a["a"])(this,"uniforms",void 0),Object(a["a"])(this,"playing",void 0),Object(a["a"])(this,"onMouseMove",(function(e){t.uniforms.u_mouse.value.x=e.pageX,t.uniforms.u_mouse.value.y=e.pageY})),Object(a["a"])(this,"onWindowResize",(function(){var e=Math.min(window.innerWidth,window.innerHeight);t.renderer.setSize(e,e),t.uniforms.u_resolution.value.x=t.renderer.domElement.width,t.uniforms.u_resolution.value.y=t.renderer.domElement.height})),Object(a["a"])(this,"animate",(function(e){requestAnimationFrame(t.animate),t.playing&&(t.slider.value=.003*e%10*100);var n=t.slider.value/100;t.uniforms.u_time.value=n,t.label.innerText=n,t.render()})),this.container=n,this.playing=!0,this.init(),this.animate()}return Object(s["a"])(e,[{key:"init",value:function(){this.camera=new o["a"],this.camera.position.z=1,this.scene=new o["d"];var e=new o["c"](2,2);this.uniforms={u_time:{type:"f",value:0},u_resolution:{type:"v2",value:new o["f"]},u_mouse:{type:"v2",value:new o["f"]}};var n=new o["e"]({uniforms:this.uniforms,vertexShader:r,fragmentShader:l}),t=new o["b"](e,n);this.scene.add(t),this.renderer=new o["g"]({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.container.appendChild(this.renderer.domElement),this.onWindowResize(),window.addEventListener("resize",this.onWindowResize,!1),document.addEventListener("mousemove",this.onMouseMove,!1),document.body.classList.add("preroll-nutflex"),this.addCrontrols()}},{key:"addCrontrols",value:function(){var e=this;this.playBtn=document.createElement("button"),this.label=document.createElement("span"),this.label.classList.add("label"),this.playBtn.innerText=this.playing?"⎕":"▶︎",this.playBtn.type="button",this.playBtn.classList.add("play-btn"),this.playBtn.addEventListener("click",(function(){e.playing=!e.playing,e.playBtn.innerText=e.playing?"⎕":"▶︎"}),!1),this.slider=document.createElement("input"),this.slider.type="range",this.slider.min=0,this.slider.max=1e3,this.slider.value=0,this.slider.classList.add("slider"),this.slider.addEventListener("input",(function(){e.playing=!1})),this.container.appendChild(this.playBtn),this.container.appendChild(this.label),this.container.appendChild(this.slider)}},{key:"render",value:function(){this.renderer.render(this.scene,this.camera)}}]),e}();new c(document.getElementById("app"))},db29:function(e,n,t){}});
//# sourceMappingURL=netflix.018ff714.js.map